
project frameworks/av/
diff --git a/frameworks/av/media/libmedia/AudioEffect.cpp b/frameworks/av/media/libmedia/AudioEffect.cpp
index 0d5d7e4..dbd392b 100644
--- a/frameworks/av/media/libmedia/AudioEffect.cpp
+++ b/frameworks/av/media/libmedia/AudioEffect.cpp
@@ -274,8 +274,9 @@ status_t AudioEffect::setParameter(effect_param_t *param)
     uint32_t size = sizeof(int);
     uint32_t psize = ((param->psize - 1) / sizeof(int) + 1) * sizeof(int) + param->vsize;
 
-    ALOGV("setParameter: param: %d, param2: %d", *(int *)param->data,
-            (param->psize == 8) ? *((int *)param->data + 1): -1);
+    // MW-FIXME: aliasing violation
+    /*ALOGV("setParameter: param: %d, param2: %d", *(int *)param->data,
+            (param->psize == 8) ? *((int *)param->data + 1): -1);*/
 
     return mIEffect->command(EFFECT_CMD_SET_PARAM, sizeof (effect_param_t) + psize, param, &size,
             &param->status);
@@ -331,8 +332,9 @@ status_t AudioEffect::getParameter(effect_param_t *param)
         return BAD_VALUE;
     }
 
-    ALOGV("getParameter: param: %d, param2: %d", *(int *)param->data,
-            (param->psize == 8) ? *((int *)param->data + 1): -1);
+    // MW-FIXME: aliasing violation
+    /*ALOGV("getParameter: param: %d, param2: %d", *(int *)param->data,
+            (param->psize == 8) ? *((int *)param->data + 1): -1);*/
 
     uint32_t psize = sizeof(effect_param_t) + ((param->psize - 1) / sizeof(int) + 1) * sizeof(int) +
             param->vsize;
diff --git a/frameworks/av/media/libmediaplayerservice/MediaPlayerFactory.cpp b/frameworks/av/media/libmediaplayerservice/MediaPlayerFactory.cpp
index 03fae91..8db0da2 100644
--- a/frameworks/av/media/libmediaplayerservice/MediaPlayerFactory.cpp
+++ b/frameworks/av/media/libmediaplayerservice/MediaPlayerFactory.cpp
@@ -211,15 +211,16 @@ class StagefrightPlayerFactory :
         }
 
         if (getDefaultPlayerType() == STAGEFRIGHT_PLAYER) {
-            char buf[20];
+            union {
+                char buf[20];
+                uint32_t buf32[20/sizeof(uint32_t)];
+            };
             lseek(fd, offset, SEEK_SET);
             read(fd, buf, sizeof(buf));
             lseek(fd, offset, SEEK_SET);
 
-            uint32_t ident = *((uint32_t*)buf);
-
             // Ogg vorbis?
-            if (ident == 0x5367674f) // 'OggS'
+            if (buf32[0] == 0x5367674f) // 'OggS'
                 return 1.0;
         }
 
diff --git a/frameworks/av/media/libstagefright/MPEG4Extractor.cpp b/frameworks/av/media/libstagefright/MPEG4Extractor.cpp
index 0e5c3af..175142e 100644
--- a/frameworks/av/media/libstagefright/MPEG4Extractor.cpp
+++ b/frameworks/av/media/libstagefright/MPEG4Extractor.cpp
@@ -1170,12 +1170,15 @@ status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
             // tenc box contains 1 byte version, 3 byte flags, 3 byte default algorithm id, one byte
             // default IV size, 16 bytes default KeyID
             // (ISO 23001-7)
-            char buf[4];
+            union {
+                char buf[4];
+                int32_t buf32;
+            };
             memset(buf, 0, 4);
             if (mDataSource->readAt(data_offset + 4, buf + 1, 3) < 3) {
                 return ERROR_IO;
             }
-            uint32_t defaultAlgorithmId = ntohl(*((int32_t*)buf));
+            uint32_t defaultAlgorithmId = ntohl(buf32);
             if (defaultAlgorithmId > 1) {
                 // only 0 (clear) and 1 (AES-128) are valid
                 return ERROR_MALFORMED;
@@ -1185,7 +1188,7 @@ status_t MPEG4Extractor::parseChunk(off64_t *offset, int depth) {
             if (mDataSource->readAt(data_offset + 7, buf + 3, 1) < 1) {
                 return ERROR_IO;
             }
-            uint32_t defaultIVSize = ntohl(*((int32_t*)buf));
+            uint32_t defaultIVSize = ntohl(buf32);
 
             if ((defaultAlgorithmId == 0 && defaultIVSize != 0) ||
                     (defaultAlgorithmId != 0 && defaultIVSize == 0)) {
diff --git a/frameworks/av/services/audioflinger/Effects.cpp b/frameworks/av/services/audioflinger/Effects.cpp
index d11ac27..1935a7b 100644
--- a/frameworks/av/services/audioflinger/Effects.cpp
+++ b/frameworks/av/services/audioflinger/Effects.cpp
@@ -485,7 +485,8 @@ status_t AudioFlinger::EffectModule::configure()
         p->psize = sizeof(uint32_t);
         p->vsize = sizeof(uint32_t);
         size = sizeof(int);
-        *(int32_t *)p->data = VISUALIZER_PARAM_LATENCY;
+        int32_t const d = VISUALIZER_PARAM_LATENCY;
+        memcpy(&p->data, &d, sizeof(int32_t));
 
         uint32_t latency = 0;
         PlaybackThread *pbt = thread->mAudioFlinger->checkPlaybackThread_l(thread->mId);
@@ -493,7 +494,7 @@ status_t AudioFlinger::EffectModule::configure()
             latency = pbt->latency_l();
         }
 
-        *((int32_t *)p->data + 1)= latency;
+        memcpy(&p->data + sizeof(int32_t), &latency, sizeof(uint32_t));
         (*mEffectInterface)->command(mEffectInterface,
                                      EFFECT_CMD_SET_PARAM,
                                      sizeof(effect_param_t) + 8,
